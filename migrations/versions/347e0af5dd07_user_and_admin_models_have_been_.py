"""user and admin models have been rewritten

Revision ID: 347e0af5dd07
Revises: 4507e9565b49
Create Date: 2023-09-07 18:54:13.284745

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '347e0af5dd07'
down_revision: Union[str, None] = '4507e9565b49'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('admins',
    sa.Column('login', sa.String(length=30), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('patronymic', sa.String(), nullable=False),
    sa.Column('active', sa.Boolean(), server_default='True', nullable=True),
    sa.Column('super_admin_flag', sa.Boolean(), server_default='False', nullable=True),
    sa.Column('password', sa.LargeBinary(), nullable=False),
    sa.Column('salt', sa.LargeBinary(), nullable=False),
    sa.Column('date_creating', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('date_last_changes_password', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('last_name', 'name', 'patronymic', name='_uniq_admin_name'),
    sa.UniqueConstraint('login'),
    sa.UniqueConstraint('password'),
    sa.UniqueConstraint('salt')
    )
    op.create_table('users',
    sa.Column('login', sa.String(length=30), nullable=False),
    sa.Column('name', sa.String(length=40), nullable=False),
    sa.Column('last_name', sa.String(length=40), nullable=False),
    sa.Column('patronymic', sa.String(length=40), nullable=False),
    sa.Column('active', sa.Boolean(), server_default='True', nullable=True),
    sa.Column('password', sa.LargeBinary(), nullable=False),
    sa.Column('salt', sa.LargeBinary(), nullable=False),
    sa.Column('date_last_changes_password', sa.DateTime(), nullable=True),
    sa.Column('date_creating', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('id_department', sa.Integer(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['creator_id'], ['admins.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['id_department'], ['departments.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('last_name', 'name', 'patronymic', name='_uniq_user_name'),
    sa.UniqueConstraint('login'),
    sa.UniqueConstraint('password'),
    sa.UniqueConstraint('salt')
    )
    op.drop_constraint('data_about_documents_id_creator_fkey', 'data_about_documents', type_='foreignkey')
    op.drop_table('users_login')
    op.drop_table('users_data')
    op.execute("DROP TABLE IF EXISTS admins_data CASCADE")
    op.drop_table('admins_login')

    op.create_foreign_key(None, 'data_about_documents', 'users', ['id_creator'], ['id'], ondelete='SET NULL')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'data_about_documents', type_='foreignkey')
    op.create_foreign_key('data_about_documents_id_creator_fkey', 'data_about_documents', 'users_data', ['id_creator'], ['id'], ondelete='SET NULL')
    op.create_table('admins_login',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('active', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.Column('login', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    sa.Column('password', postgresql.BYTEA(), autoincrement=False, nullable=False),
    sa.Column('salt', postgresql.BYTEA(), autoincrement=False, nullable=False),
    sa.Column('super_admin_flag', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('date_last_changes_password', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['id'], ['admins_data.id'], name='admins_login_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='admins_login_pkey'),
    sa.UniqueConstraint('password', name='admins_login_password_key'),
    sa.UniqueConstraint('salt', name='admins_login_salt_key')
    )
    op.create_table('admins_data',
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('last_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('patronymic', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('date_creating', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('admins_data_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id', name='admins_data_pkey'),
    sa.UniqueConstraint('last_name', 'name', 'patronymic', name='_uq_admin_name'),
    postgresql_ignore_search_path=False
    )
    op.create_table('users_data',
    sa.Column('name', sa.VARCHAR(length=40), autoincrement=False, nullable=False),
    sa.Column('last_name', sa.VARCHAR(length=40), autoincrement=False, nullable=False),
    sa.Column('patronymic', sa.VARCHAR(length=40), autoincrement=False, nullable=False),
    sa.Column('date_creating', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('id_department', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('creator_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_data_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['creator_id'], ['admins_data.id'], name='users_data_creator_id_fkey', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['id_department'], ['departments.id'], name='users_data_id_department_fkey', ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id', name='users_data_pkey'),
    sa.UniqueConstraint('last_name', 'name', 'patronymic', name='_uq_user_name'),
    postgresql_ignore_search_path=False
    )
    op.create_table('users_login',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('active', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.Column('login', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    sa.Column('password', postgresql.BYTEA(), autoincrement=False, nullable=False),
    sa.Column('salt', postgresql.BYTEA(), autoincrement=False, nullable=False),
    sa.Column('date_last_changes_password', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['id'], ['users_data.id'], name='users_login_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='users_login_pkey'),
    sa.UniqueConstraint('password', name='users_login_password_key'),
    sa.UniqueConstraint('salt', name='users_login_salt_key')
    )
    op.drop_table('users')
    op.drop_table('admins')
    # ### end Alembic commands ###
